* {
    box-sizing: border-box;
}

html {
    font-size: 16px;
}

body {
    margin: 0;
}

/* h2 {
    font-family: 'Montserrat', sans-serif;
    font-weight: 900;
    font-style: italic;
    text-align: center;
    border: 3px solid black;
    width: 50%;
}    */

ul {
    font-size: 50px;
    list-style: square;
}

ol {
    font-size: 50px;
    list-style: upper-roman;
    margin-left: 40px;
}

.conteudo {
    margin-left: 2rem;
}

#titulo-principal {
    margin-left: 5rem;
}

/*Explicando cascade e especificidade*/

/* 0-2-0 */
.titulo.titulo-pagina {
    color: purple;
}

/* 1-0-0 */
#titulo-principal {
    color: yellowgreen;
}

/* 0-1-0 */
.titulo-pagina {
    font-size: 5rem;
    border: 5px solid red;
    color: red;
    margin-left: 4rem;
}

/* 0-1-0 */
.titulo {
    border-style: dashed;
    color: green;
    margin-left: 0rem;
}

/* 0-0-1 */
/* se tiver !important o peso ficará 1-0-0-0, ou seja, sobrescreverá tudo*/
h1 {
    color: blue;
    /* color: blue !important; */
}

.titulo-generico {
    font-size: 40px;
    color: red;
}

.container-exemplo > .titulo-generico {
    font-size: 80px;
    color: green;
}

.meu-link {
    font-size: 30px;
    text-decoration: none;
}

.meu-link:hover {
    text-decoration: underline;
    color: blue;
}

.meu-link:link {
    color: green;
}

.meu-link:visited {
    color: orangered;
}

.meu-link:active {
    font-size: 80px;
    color: purple;
}

.meu-link:focus {
    font-size: 90px;
    color: gray;
}

.meu-input {
    background-color: gray;
    font-size: 40px;
    color: white;
}

.meu-input[type = "number"] {
    font-size: 70px;
    background-color: black;
}

.meu-input:focus {
    background-color: white;
    color: black;

}

.nav-menu {
    border: 2px solid blue;
    list-style: none;
}

.menu-item {
    border: 2px dashed purple;
    background-color: gray;
    margin-bottom: 20px;
    display: inline-block;
    font-size: 30px; 
    min-width: 200px;
}

.menu-item:last-child {
    margin-bottom: 0px;
}

.menu-item:first-child {
    color: red;
}

.menu-item:nth-child(3) {
    color: green;
}

.menu-item:nth-child(n + 2) {
    font-weight: bold;
    background-color: yellow;
}
.bloco-inicial {
    font-size: 50px;
    background-color: grey;
    margin-bottom: 20px;
    display: block; /*por padrão div é display block*/
    width: 600px;
}

/* elementos importantes que são por defaut block
<div>
<h1, 2, 3, ...>
*/

.span-inicial {
    font-size: 40px;
    font-family: Arial, Helvetica, sans-serif;
    color: yellowgreen;
    text-decoration: underline;
    text-transform: uppercase;
    /*display: inline; -> por padrão div é display inline*/
    display: inline-block;
    width: 200px; /* ignorado por elemento inline, mas sim no inline-block */
    height: 50px; /* ignorado por elemento inline, mas sim no inline-block */
    margin-top: 50px; /* não é aplicada em elemento inline, sendo assim não muda nada*/
    margin-left: 20px; /* propriedades de aplicação horizontal se aplicam em elementos inline */
    background-color: green;
}

/* elementos importantes que são por defaut inline
<span>
<a >
<strong>
<em>
*/

.bloco-escondido {
    display: none; /* esconde o elemento */
    /* display: grid; /* grid */
    /* display: flex; /* flexbox */
}

.box {
    color: yellow;
    width: 100px;
    height: 100px;
    background-color: blue;
    display: inline-block;
    /* border: 10px solid green; */

    /* padding: 10px; mesma coisa que as 4 linhas abaixo
    padding-top: 10px;
    padding-bottom: 10px;
    padding-left: 10px;
    padding-right: 10px; */
 
    /* padding: 20px 30px; mesma coisa que as 4 linhas abaixo
    padding-top: 20px;
    padding-bottom: 20px;
    padding-left: 30px;
    padding-right: 30px; */

    padding: 10px 20px 30px 40px; /* mesma coisa que as 4 linhas abaixo */
    /* padding-top: 10px;
    padding-bottom: 30px;
    padding-left: 40px;
    padding-right: 20px; */

    margin: 10px;
    border-top: 10px solid green;
    border-bottom: 10px dashed red;
}

.wrapper {
    /* Como este elemento é uma div, por padrão sempre é display=bock */
    display: block;
    font-size: 1.5rem;
    background-color: #808080;
    width: 30rem;
    margin: 0 auto;
}

.wrapper p {
    margin-top: 0;
}

.wrapper .imagem-principal {
    float: left;
    margin: 0 20px 10px 0;
}

/*.wrapper .paragrafo-clear {
    clear: both; /* Usado para tirar o paragrafo do float e o texto seguir o fluxo */
/*}*/

.wrapper .imagem-direita {
    float: right;
}

.wrapper::after {
    content: '';
    display: table;
    clear: both;
}

.wrapper2 {
    background-color: #faf87f;
    font-size: 1.5rem;
    width: 60rem;
    margin: 20px auto;
}

.wrapper2::after {
    content: '';
    display: table;
    clear: both;
}

.box-1 {
    height: 200px;
    width: 33%;
}

.red {
    background-color: red;
    float: right;
}

.blue {
    background-color: blue;
    float: right;
}

.green {
    background-color: green;
    float: right;
}

.wrapper-3 {
    background-color: #faf87f;
    font-size: 1.5rem;
    width: 60rem;
    margin: 20px auto;
}

.wrapper-3::after {
    content: '';
    display: table;
    clear: both;
}

.servico {
    width: 31%;
    border: 1px solid blue;
    float: left;
    min-height: 200px;
    margin: 0 1%;
    padding: 1%;
}

.wrapper-4 {
    border: 5px solid blue;
    padding: 40px;
    position: relative; 
}

.filho {
    /*
    position: relative -> em relação ao parent
    position: absolute -> em relação ao topo da tela se o primeiro parent não tiver position:relative
    position: fixed -> em relação ao topo da tela sempre e fica fixa na tela mesmo com scroll
    */

    position: absolute;
    background-color: #ff0000;
    padding: 20px;
    bottom: 20px;
}

.wrapper-5 {
    width: 50%;
}

.rizisable-img {
    max-width: 100%;
    height: auto;
}
/* media query utilizando conceito desktop first, ou seja, meu css é feito para desktop e depois regula tamanhos em relacção a telas menores*/
@media (max-width: 1200px) {
    body {
        background-color: red;
    }
}
@media (max-width: 1024px) {
    body {
        background-color: green;
    }
    .servico {
        width: 40%;
        margin-left: 5%;
    }
}
@media (max-width: 768px) {
    body {
        background-color: blue;
    }
    .rizisable-img {
        display: none;
    }
    .servico {
        width: 100%;
    }
}
@media (max-width: 480px) {
    body {
        background-color: yellow;
    }
}

/* media query utilizando conceito mobile first, ou seja, meu css é feito para mobile e depois regula tamanhos em relacção a telas maiores

@media (min-width: 767px) {
    body {
        background-color: green;
    }
    .servico {
        width: 40%;
        margin-left: 5%;
    }
}
@media (min-width: 1023px) {
    body {
        background-color: blue;
    }
    .rizisable-img {
        display: none;
    }
    .servico {
        width: 100%;
    }
}
@media (min-width: 1199px) {
    body {
        background-color: yellow;
    }
}*/

